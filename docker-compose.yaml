version: '3.7'

name: goilerplate

services:
  server:
    build:
      context: .
      dockerfile: /docker/api.Dockerfile
    restart: on-failure
    container_name: api
    networks:
      - api_net
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - pg
      - rd

  pg:
    image: postgres:alpine
    restart: on-failure
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - api_net
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - pg_data:/var/lib/postgresql/data

  rd:
    build:
      context: .
      dockerfile: /docker/redis.Dockerfile
    restart: on-failure
    container_name: redis
    networks:
      - api_net
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis_data:/data

  pgadmin:
    build:
      context: .
      dockerfile: /docker/pgadmin4.Dockerfile
    restart: on-failure
    container_name: pgadmin4
    environment: 
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    networks:
      - api_net
    ports: 
      - ${PGADMIN_PORT}:${PGADMIN_LISTEN_PORT}
    volumes: 
      - pgadmin-data:/var/lib/pgadmin
      - ./docker/config/servers.json:/pgadmin4/servers.json
    depends_on: 
      - pg

networks:
  api_net:

volumes:
  pg_data:
  redis_data:
  pgadmin-data: